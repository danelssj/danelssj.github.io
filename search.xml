<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PTA_树与图</title>
      <link href="/2019/11/22/PTA_%E6%A0%91%E4%B8%8E%E5%9B%BE/"/>
      <url>/2019/11/22/PTA_%E6%A0%91%E4%B8%8E%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="7-3-玩转二叉树"><a href="#7-3-玩转二叉树" class="headerlink" title="7-3 玩转二叉树"></a>7-3 玩转二叉树</h1><p><strong>描述：</strong><br>  给定一棵二叉树的中序遍历和前序遍历，请你先将树做个镜面反转，再输出反转后的层序遍历的序列。所谓镜面反转，是指将所有非叶结点的左右孩子对换。<br>这里假设键值都是互不相等的正整数。</p><p><strong>输入格式：</strong><br>  输入第一行给出一个正整数N（≤30），是二叉树中结点的个数。第二行给出其中序遍历序列。第三行给出其前序遍历序列。数字间以空格分隔。</p><p><strong>输出格式：</strong><br>  在一行中输出该树反转后的层序遍历的序列。数字间以1个空格分隔，行首尾不得有多余空格。</p><p><strong>输入样例：</strong><br>7<br>1 2 3 4 5 6 7<br>4 1 3 2 6 5 7</p><p><strong>输出样例：</strong><br>4 6 1 7 5 3 2</p><p><strong>代码：</strong><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int pre[31],in[31];</span><br><span class="line">int n;//节点个数</span><br><span class="line">typedef struct BiTNode&#123;</span><br><span class="line">int data;</span><br><span class="line">struct BiTNode *lchild;</span><br><span class="line">struct BiTNode *rchild;</span><br><span class="line">&#125;BiTNode,*BiTree;</span><br><span class="line">BiTree Build(int *in,int *pre,int n)&#123;//第一个参数是中序序列的起始位置,第二个参数是后序序列的起始位置,n是长度 </span><br><span class="line">if(n&lt;=0)return NULL;</span><br><span class="line">int *p=in;</span><br><span class="line">while(p)</span><br><span class="line">&#123;</span><br><span class="line">if(*p==*pre)break;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line">BiTree T=new BiTNode;</span><br><span class="line">int len=p-in;</span><br><span class="line">T-&gt;data=*p;</span><br><span class="line">BiTNode* l=Build(in,pre+1,len);</span><br><span class="line">BiTNode* r=Build(p+1,pre+len+1,n-1-len);</span><br><span class="line">if(l==NULL&amp;&amp;r==NULL)</span><br><span class="line">&#123;</span><br><span class="line"> T-&gt;lchild=l;</span><br><span class="line">T-&gt;rchild=r;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    T-&gt;rchild=l;</span><br><span class="line">T-&gt;lchild=r;</span><br><span class="line">&#125;</span><br><span class="line">return T;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void LevelOrder(BiTree root)&#123;</span><br><span class="line">if (root == NULL) &#123;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">std::queue&lt;BiTNode *&gt;q;</span><br><span class="line">// 启动</span><br><span class="line">q.push(root);</span><br><span class="line"></span><br><span class="line">while (!q.empty()) &#123;</span><br><span class="line">BiTNode *front = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"></span><br><span class="line">if (front-&gt;lchild != NULL) &#123;</span><br><span class="line">q.push(front-&gt;lchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (front-&gt;rchild != NULL) &#123;</span><br><span class="line">q.push(front-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">if(!q.empty())</span><br><span class="line">cout&lt;&lt;front-&gt;data&lt;&lt;&quot; &quot;;</span><br><span class="line">else cout&lt;&lt;front-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">BiTree T;//只需要定义,不需要赋值-&gt;[BiTree T = new BiTNode;] </span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;in[i];</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;pre[i];</span><br><span class="line">&#125;</span><br><span class="line">T=Build(in,pre,n);</span><br><span class="line">LevelOrder(T);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Netease Cloud</title>
      <link href="/2019/11/22/Netease%20Cloud/"/>
      <url>/2019/11/22/Netease%20Cloud/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/blog1_1.jpg" alt="alt"><br>男人的一生，分为四个阶段。</p><p>喜欢上一个人。Like someone.</p><p>喜欢上一个人。Like to fuck someone.</p><p>喜欢上一个人。Like the last one.</p><p>喜欢上一个人。 Like to be alone.</p><p><strong>——网易云热评《嘿，抬头！ 》</strong></p><p>有部电影中，记得有这样的对话“你愿意为我而死吗？”</p><p>我愿意”</p><p>不，那太简单了，换个问题，你愿意为我而活吗？”</p><p><strong>—— 网易云热评《心安理得》​​</strong></p><p><img src="https://pic2.zhimg.com/80/v2-e1140192244e5a4f2d75a3e01912c159_hd.jpg" alt="alt"></p><p>喜欢上你，并不是你长的好不好看的原因，而是你在特殊的时间里给了我别人给不了的感觉。<br>世界上最美好的三天是:</p><p>有你的那天</p><p>有我的那天</p><p>当你我变成我们的那天。</p><p>——网易云热评《三字言》 ​</p><p><img src="https://pic3.zhimg.com/50/v2-09f989a8e41be443ffbc3587b94157d0_hd.jpg" alt="alt"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/22/hello-world/"/>
      <url>/2019/11/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
